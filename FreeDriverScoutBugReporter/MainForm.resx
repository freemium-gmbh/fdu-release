<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>